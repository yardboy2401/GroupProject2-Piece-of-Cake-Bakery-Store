//requires for express Router and User Model
const router = require("express").Router();
const { User } = require("../../models");
const nodemailer = require('nodemailer');

//get route for all the users
router.get("/", (req, res) => {
  User.findAll({
    attributes: ["id", "name", "email", "password"], //TODO remove password in the future
  }) //include the posts and comments of the specific user
    .then((dbUserData) => {
      res.json(dbUserData);
    })
    .catch((err) => {
      console.log(err);
      res.status(500).json(err);
    });
});

//get user by specific id
router.get("/:id", (req, res) => {
  User.findOne({
    where: {
      id: req.params.id,
    },
    attributes: ["id", "name", "email", "password"], //remove password in the futrue    
  }) //include the posts and comments of this user
    .then((dbUserData) => {
      if (!dbUserData) {
        res.status(404).json({ message: "No User found with this id" });
        return;
      }
      res.json(dbUserData);
    })
    .catch((err) => {
      console.log(err);
      res.status(500).json(err);
    });
});

//post route to add a user
router.post("/", (req, res) => {
    User.create({
      //expects username, email, password
      username: req.body.username,
      email: req.body.email,
      password: req.body.password,
    })
      .then((dbUserData) => {
        //save the data in a session
        req.session.save(() => {
          // run the save function
          req.session.user_id = dbUserData.id; 
          req.session.username = dbUserData.username;
          req.session.loggedIn = true;
          res.json(dbUserData); 
        });
      })
      .catch((err) => {
        res.status(500).json(err);
      });
  });

  router.post('/send', function(req, res, next) {
    var transporter = nodemailer.createTransport({
      host: "smtp.mailtrap.io",
      port: 2525,
      auth: {
        user: "1e68b6c1d76ed0", //generated by Mailtrap
        pass: "a8415e9f0e4514" //generated by Mailtrap
      }
    });
    const message = `Hi ${req.body.username}. Welcome to Piece of Cake Bakery Online Ordering! We look forward to baking you delicious treats to go!
    
Thanks,
The Piece of Cake Bakery Team`
    const mailOptions = {
      from: `yardboy2401@gmail.com`,
      to: `${req.body.email}`,
      subject: `${req.body.username} welcome to Piece Of Cake Bakery`,
      text: `${message}`,
      replyTo: `yardboy2401@gmail.com`
    }
    transporter.sendMail(mailOptions, function(err, res) {
      if (err) {
        console.error('there was an error: ', err);
      } else {
        console.log('here is the res: ', res)
      }
    })  
  })

//login route for the user
router.post("/login", (req, res) => {
  //find the user
  User.findOne({
    where: {
      email: req.body.email,
    },
  })
    .then((dbUserData) => {
      //check if the user is present
      if (!dbUserData) {
        res.status(400).json({ message: "User not found" });
        return;
      }
      const validPassword = dbUserData.checkPassword(req.body.password);

      //proceed based on results
      if (!validPassword) {
        res.status(400).json({ message: "Incorrect Password!" });
        return;
      }

      //save things in a session
      req.session.save(() => {
        //declare session variables
        req.session.user_id = dbUserData.id;
        req.session.username = dbUserData.username;
        req.session.loggedIn = true;
        //send response
        res.json({ user: dbUserData, message: "You are now logged in!" });
      });
    })
    .catch((err) => {
      console.log(err);
      res.status(500).json(err);
    });
});

//remove a user by specific id
router.delete("/:id", (req, res) => {
  User.destroy({
    where: {
      id: req.params.id,
    },
  })
    .then((dbUserData) => {
      if (!dbUserData) {
        res.status(404).json({ message: "No User found with this id" });
        return;
      }
      res.json(dbUserData);
    })
    .catch((err) => {
      console.log(err);
      res.status(500).json(err);
    });
});

//Log out the user
router.post("/logout", (req, res) => {
  if (req.session.loggedIn) {
    req.session.destroy(() => {
      // end the session
      res.status(204).end();
    });
  } else {
    res.status(404).end(); // 404 response if no user
  }
});

//export router
module.exports = router;